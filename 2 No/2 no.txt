   Design, Develop and Implement a program for the following Array operations 
 a. Creating an Array of N Integer Elements
 b. Sort the elements using Bubble Sort Algorithm
 c. Search an item using Linear Search Algorithm
 d. Search an item using Binary Search Algorithm
 --------------------------------------------------------------
answer:

#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Enter number of elements: ";
    cin >> n;

    int arr[100];
    cout << "Enter " << n << " numbers:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Bubble Sort
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    // Show sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    // Linear Search
    int key;
    cout << "Enter number to search (Linear): ";
    cin >> key;
    bool found = false;
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            cout << "Found at index " << i << " (Linear Search)\n";
            found = true;
            break;
        }
    }
    if (!found) {
        cout << "Not found (Linear Search)\n";
    }

    // Binary Search
    cout << "Enter number to search (Binary): ";
    cin >> key;
    int low = 0, high = n - 1;
    found = false;
    while (low <= high) {
        int mid = (low + high) / 2;
        if (arr[mid] == key) {
            cout << "Found at index " << mid << " (Binary Search)\n";
            found = true;
            break;
        } else if (arr[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    if (!found) {
        cout << "Not found (Binary Search)\n";
    }

    return 0;
}


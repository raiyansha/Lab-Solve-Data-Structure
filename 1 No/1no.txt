1.
 Design, develop and implement a program for the following Array operations  
 a. Creating an Array of N Integer Elements 
 b. Display of Array Elements with Suitable Headings 
 c. Inserting an Element (ELEM) at a given valid Position (POS) 
 d. Deleting an Element at a given valid Position (POS)
. . . . . . . . . . . . . . .  . . . . .  . . . . . . . . . . . . . .  . . . . . .  . .
Answer : a...
 
     #include <iostream>
using namespace std;

int main() {
    int n;
    int arr[100];

    cout << "Enter array elements number: ";
    cin >> n;

    cout << "Enter " << n << " integers:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    cout << "\n Array has been created.\n";
    cout << "The elements are:\n";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }

    return 0;
}

 . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . .

Answer : B..

     #include <iostream>
using namespace std;

int main() {
    int n;
    int arr[100];

    cout << "Enter array elements number: ";
    cin >> n;

    cout << "Enter " << n << " integers:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    cout << "\n Array Elements:\n";
    cout << "Index \t Value\n";
    for (int i = 0; i < n; i++) {
        cout << i << "\t" << arr[i] << endl;
    }

    return 0;
}

. . . . .. . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . .. . . . .  .. . . . . . . . . .
Answer : c...

   int main() {
    int arr[100];
    int n, elem, pos;

    // Step 1: Input array
    cout << "Enter array elements number: ";
    cin >> n;

    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Step 2: Input element to insert and position
    cout << "Enter element to insert: ";
    cin >> elem;
    cout << "Enter position to insert at (0 to " << n << "): ";
    cin >> pos;

    // Step 3: Check for valid position
    if (pos < 0 || pos > n) {
        cout << "Invalid position!" << endl;
        return 1;
    }

    // Step 4: Shift elements to the right
    for (int i = n; i > pos; i--) {
        arr[i] = arr[i - 1];
    }

    // Step 5: Insert the element
    arr[pos] = elem;
    n++;  // increase size

    // Step 6: Display updated array
    cout << "\n Array after insertion:\n";
    cout << "Index \tvValue\n";
    for (int i = 0; i < n; i++) {
        cout << i << "\t" << arr[i] << endl;
    }

    return 0;
}

. . . ... .. . . . . . .   . . .  . . .  . . . .  . . . . . . . . . . . . . . . . . . ..  . . . . . . . . . . . . .
Answer: d..

#include <iostream>
using namespace std;

int main() {
    int arr[100];
    int n, pos;

    // Step 1: Input array
    cout << "Enter array elements number: ";
    cin >> n;

    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Step 2: Input position to delete
    cout << "Enter position to delete (0 to " << n - 1 << "): ";
    cin >> pos;

    // Step 3: Check for valid position
    if (pos < 0 || pos >= n) {
        cout << "Invalid position!" << endl;
        return 1;
    }

    // Step 4: Shift elements to the left
    for (int i = pos; i < n - 1; i++) {
        arr[i] = arr[i + 1];
    }

    n--; // reduce size after deletion

    // Step 5: Display updated array
    cout << "\n Array after deletion:\n";
    cout << "Index \t Value\n";
    for (int i = 0; i < n; i++) {
        cout << i << "\t" << arr[i] << endl;
    }

    return 0;
}



